% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/perFeatureQCMetrics.R
\docType{methods}
\name{perFeatureQCMetrics}
\alias{perFeatureQCMetrics}
\alias{perFeatureQCMetrics,ANY-method}
\alias{perFeatureQCMetrics,SummarizedExperiment-method}
\title{Per-feature quality control metrics}
\usage{
perFeatureQCMetrics(x, ...)

\S4method{perFeatureQCMetrics}{ANY}(x, subsets = NULL,
  detection.limit = 0, BPPARAM = SerialParam())

\S4method{perFeatureQCMetrics}{SummarizedExperiment}(x, ...,
  assay.type = "counts")
}
\arguments{
\item{x}{A numeric matrix of counts with cells in columns and features in rows.

Alternatively, a \linkS4class{SummarizedExperiment} object containing such a matrix.}

\item{...}{For the generic, further arguments to pass to specific methods.

For the SummarizedExperiment and SingleCellExperiment methods, further arguments to pass to the ANY method.}

\item{subsets}{A named list containing one or more vectors 
(a character vector of cell names, a logical vector, or a numeric vector of indices),
used to identify interesting sample subsets such as negative control wells.}

\item{detection.limit}{A numeric scalar specifying the lower detection limit for expression.}

\item{BPPARAM}{A BiocParallelParam object specifying whether the QC calculations should be parallelized.}

\item{assay.type}{A string or integer scalar indicating which \code{assays} in the \code{x} contains the count matrix.}

\item{use.alt.exps}{Logical scalar indicating whether QC statistics should be computed for alternative Experiments in \code{x}.
If \code{TRUE}, statistics are computed for all alternative experiments. 

Alternatively, an integer or character vector specifying the alternative Experiments to use to compute QC statistics.

Alternatively \code{NULL}, in which case alternative experiments are not used.}
}
\value{
A \linkS4class{DataFrame} of QC statistics where each row corresponds to a row in \code{x}.
This contains the following fields:
\itemize{
\item \code{mean}: numeric, the mean counts for each feature.
\item \code{above.limit}: numeric, the proportion of observations above \code{detection.limit}.
\item \code{subsets}: A nested DataFrame containing statistics for each subset, see Details.
}
}
\description{
Compute per-feature quality control metrics for a count matrix or a \linkS4class{SummarizedExperiment}.
}
\details{
This function calculates useful QC metrics for features, including the mean across all cells
and the number of expressed features (i.e., counts above the detection limit).

If \code{subsets} is specified, the same statistics are computed for each subset of cells.
This is useful for obtaining statistics for cell sets of interest, e.g., negative control wells.
These statistics are stored as nested \linkS4class{DataFrame}s in the output.
For example, if \code{subsets} contained \code{"empty"} and \code{"cellpool"}, the output would look like:
\preformatted{  output 
  |-- mean 
  |-- above.limit
  +-- subsets
      |-- empty
      |   |-- mean 
      |   |-- above.limit
      |   +-- ratio.in
      +-- cellpool 
          |-- mean
          |-- above.limit
          +-- ratio.in
}
The \code{ratio.in} field contains the ratio of the mean within each subset to the mean across all cells.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
example_sce <- SingleCellExperiment(
    assays = list(counts = sc_example_counts), 
    colData = sc_example_cell_info
)

stats <- perFeatureQCMetrics(example_sce)
stats

# With subsets.
stats2 <- perFeatureQCMetrics(example_sce, subsets=list(Empty=1:10))
stats2$subsets

}
\author{
Aaron Lun
}
