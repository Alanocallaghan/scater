% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/normalizeCounts.R
\docType{methods}
\name{normalizeCounts}
\alias{normalizeCounts}
\alias{normalizeCounts,DelayedMatrix-method}
\alias{normalizeCounts,ANY-method}
\alias{normalizeCounts,SummarizedExperiment-method}
\alias{normalizeCounts,SingleCellExperiment-method}
\title{Compute normalized expression values}
\usage{
normalizeCounts(x, ...)

\S4method{normalizeCounts}{DelayedMatrix}(x, size_factors = NULL,
  use_size_factors = NULL, log = TRUE, return_log = NULL,
  pseudo_count = 1, log_exprs_offset = NULL,
  center_size_factors = TRUE, subset_row = NULL)

\S4method{normalizeCounts}{ANY}(x, size_factors = NULL,
  use_size_factors = NULL, log = TRUE, return_log = NULL,
  pseudo_count = 1, log_exprs_offset = NULL,
  center_size_factors = TRUE, subset_row = NULL)

\S4method{normalizeCounts}{SummarizedExperiment}(x, ...,
  exprs_values = "counts")

\S4method{normalizeCounts}{SingleCellExperiment}(x, size_factors = NULL,
  ...)
}
\arguments{
\item{x}{A numeric matrix-like object containing counts for cells in the columns and features in the rows.

Alternatively, a \linkS4class{SingleCellExperiment} or \linkS4class{SummarizedExperiment} object containing such a count matrix.}

\item{...}{For the generic, arguments to pass to specific methods.

For the SummarizedExperiment method, further arguments to pass to the ANY or \linkS4class{DelayedMatrix} methods.

For the SingleCellExperiment method, further arguments to pass to the SummarizedExperiment method.}

\item{size_factors}{A numeric vector of cell-specific size factors.
Alternatively \code{NULL}, in which case the size factors are extracted or computed from \code{x}.}

\item{use_size_factors}{Deprecated, same as \code{size_factors}.}

\item{log}{Logical scalar indicating whether normalized values should be log2-transformed.}

\item{return_log}{Deprecated, same as \code{log}.}

\item{pseudo_count}{Numeric scalar specifying the pseudo_count to add when log-transforming expression values.}

\item{log_exprs_offset}{Deprecated, same as \code{pseudo_count}.}

\item{center_size_factors}{Logical scalar indicating whether size factors should be centered at unity before being used.}

\item{subset_row}{A vector specifying the subset of rows of \code{x} for which to return a result.}

\item{exprs_values}{A string or integer scalar specifying the assay of \code{x} containing the count matrix.}
}
\value{
A matrix-like object of (log-)normalized expression values.
}
\description{
Compute (log-)normalized expression values by dividing counts for each cell by the corresponding size factor.
}
\details{
Normalized expression values are computed by dividing the counts for each cell by the size factor for that cell.
This aims to remove cell-specific scaling biases, e.g., due to differences in sequencing coverage or capture efficiency.
If \code{log=TRUE}, log-normalized values are calculated by adding \code{pseudo_count} to the normalized count and performing a log2 transformation.

If no size factors are supplied, they are determined automatically from \code{x}:
\itemize{
\item For count matrices and \linkS4class{SummarizedExperiment} inputs,
the sum of counts for each cell is used to compute a size factor via the \code{\link{librarySizeFactors}} function.
\item For \linkS4class{SingleCellExperiment} instances, the function searches for \code{\link{sizeFactors}} from \code{x}.
If none are available, it defaults to library size-derived size factors.
}
If \code{size_factors} are supplied, they will override any size factors present in \code{x}.

If \code{center_size_factors=TRUE}, all sets of size factors will be centered to have the same mean prior to calculation of normalized expression values.
This ensures that abundances are roughly comparable between features normalized with different sets of size factors.
By default, the centre mean is unity, which means that the computed \code{exprs} can be interpreted as being on the same scale as log-counts.
It also means that the value of \code{pseudo_count} can be interpreted as a pseudo_count (i.e., on the same scale as the counts).
}
\examples{
data("sc_example_counts")
normed <- normalizeCounts(sc_example_counts)
str(normed)
}
\author{
Aaron Lun
}
