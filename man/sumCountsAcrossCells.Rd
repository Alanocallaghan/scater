% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sumCountsAcrossCells.R
\name{sumCountsAcrossCells}
\alias{sumCountsAcrossCells}
\title{Sum counts across a set of cells}
\usage{
sumCountsAcrossCells(object, ids, exprs_values = "counts",
  BPPARAM = SerialParam())
}
\arguments{
\item{object}{A \linkS4class{SingleCellExperiment} object or a count matrix.}

\item{ids}{A factor specifying the set to which each cell in \code{object} belongs.}

\item{exprs_values}{A string or integer scalar specifying the assay of \code{object} containing counts, if \code{object} is a SingleCellExperiment.}

\item{BPPARAM}{A \linkS4class{BiocParallelParam} object specifying how summation should be parallelized.}
}
\value{
A count matrix where counts for all cells in the same set are summed together for each feature.
}
\description{
Create a count matrix where counts for all cells in a set are summed together.
}
\details{
This function provides a convenient method for aggregating counts across multiple columns for each feature.
A typical application would be to sum counts across all cells in each cluster to obtain \dQuote{pseudo-bulk} samples for further analysis.

Any \code{NA} values in \code{ids} are implicitly ignored and will not be considered or reported.
This may be useful, e.g., to remove undesirable cells by setting their entries in \code{ids} to \code{NA}.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
example_sce <- SingleCellExperiment(
    assays = list(counts = sc_example_counts), 
    colData = sc_example_cell_info)

ids <- sample(LETTERS[1:5], ncol(example_sce), replace=TRUE)
out <- sumCountsAcrossCells(example_sce, ids)
dimnames(out)
}
\author{
Aaron Lun
}
