% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc.R
\name{calculateQCMetrics}
\alias{calculateQCMetrics}
\title{Calculate QC metrics}
\usage{
calculateQCMetrics(object, exprs_values = "counts", feature_controls = NULL,
  cell_controls = NULL)
}
\arguments{
\item{object}{A SingleCellExperiment object containing expression values, usually counts.}

\item{exprs_values}{character(1), indicating which slot of the \code{assays} of the \code{object}
should be used to define expression? Defaults to \code{"counts"}.}

\item{feature_controls}{a named list containing one or more vectors 
(character vector of feature names, a logical vector, or a numeric vector of
indices) used to identify feature controls such as ERCC spike-in sets or 
mitochondrial genes, etc).}

\item{cell_controls}{a character vector of cell (sample) names, or a logical
vector, or a numeric vector of indices used to identify cell controls, e.g.,
blank wells or bulk controls).}
}
\value{
A SingleCellExperiment object containing QC metrics in the row and column metadata.
}
\description{
Calculate QC metrics
}
\details{
This function calculates useful quality control metrics to help with pre-processing
of data and identification of potentially problematic features and cells.
}
\section{Cell-level QC metrics}{

Denote the value of \code{exprs_values} as \code{X}. Cell-level metrics include:
\describe{
 \item{\code{total_X}:}{Sum of expression values for each cell (i.e., the library 
 size, when counts are the expression values).}
 \item{\code{log10_total_X}:}{Values of \code{total_X} after log10-transformation, 
 after adding a pseudo-count of 1.}
 \item{\code{total_features}:}{The number of features that have expression values 
 above zero.}
 \item{\code{pct_X_top_Y_features}:}{The percentage of the total that 
 is contained within the top Y most highly expressed features in each cell.}
}

If any controls are specified in \code{feature_controls}, the above metrics
will be recomputed using only the features in each control set. For example,
the sum of expression values for all genes in a control set \code{Z} would 
be labelled as \code{total_X_Z}. Each control set is also assigned a \code{pct_X_Z}
metric for additive \code{X}, representing the percentage of expression values 
assigned to \code{Z}.

In addition to the user-specified control sets, two other sets are automatically
generated - the \code{"feature_controls"} set, containing a union of all sets;
and an \code{"endogenous"} set, containing all genes not in any control set.
Metrics are also computed for these sets in the same manner described above.

Finally, there is the \code{is_cell_control} field, which indicates whether
each cell has been defined as a cell control by \code{cell_controls}. If 
multiple sets of cell controls are defined (e.g., blanks or bulk libraries),
a metric \code{is_cell_control_C} is produced for each cell control set 
\code{C}, and \code{is_cell_control} represents the union of all sets.

These cell-level QC metrics are added as columns to the \code{colData}
slot of the SingleCellExperiment object so that they can be inspected and are
readily available for other functions to use.
}

\section{Feature-level QC metrics}{

Denote the value of \code{exprs_values} as \code{X}. Feature-level metrics include:
\describe{
 \item{\code{mean_X}:}{Mean expression value for each gene across all cells.}
 \item{\code{log10_mean_X}:}{Log10-mean expression value for each gene across all cells.}
 \item{\code{rank_X}:}{Rank of each gene based on its mean expression value.
 More highly expressed genes are more highly ranked.}
 \item{\code{total_X}:}{Sum of expression values for each gene across all cells.}
 \item{\code{n_cells_X}:}{Number of cells with non-zero expression values for each gene.}
 \item{\code{pct_dropout_X}:}{Percentage of cells with zero expression values for each gene.}
 \item{\code{log10_total_X}:}{Log10-sum of expression values for each gene across all cells.}
}

If any controls are specified in \code{cell_controls}, the above metrics
will be recomputed using only the cells in each control set. For example,
the means of expression values for all cells in a control set \code{Z} would 
be labelled as \code{mean_X_Z}. 

In addition to the user-specified control sets, two other sets are automatically
generated - the \code{"cell_controls"} set, containing a union of all sets;
and an \code{"non_controls"} set, containing all genes not in any control set.
Metrics are also computed for these sets in the same manner described above.

Finally, there is the \code{is_feature_control} field, which indicates whether
each feature has been defined as a control by \code{feature_controls}. If 
multiple sets of feature controls are defined (e.g., ERCCs, mitochondrial genes),
a metric \code{is_feature_control_F} is produced for each feature control set 
\code{F}, and \code{is_feature_control} represents the union of all sets.

These feature-level QC metrics are added as columns to the \code{rowData}
slot of the SingleCellExperiment object so that they can be inspected and are
readily available for other functions to use.
}

\examples{
data("sc_example_counts")
data("sc_example_cell_info")
example_sce <- SingleCellExperiment(
assays = list(counts = sc_example_counts), 
colData = sc_example_cell_info)
example_sce <- calculateQCMetrics(example_sce)

## with a set of feature controls defined
example_sce <- calculateQCMetrics(example_sce, 
feature_controls = list(set1 = 1:40))

## with a named set of feature controls defined
example_sce <- calculateQCMetrics(example_sce, 
                                     feature_controls = list(ERCC = 1:40))

}
