% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{runDiffusionMap}
\alias{runDiffusionMap}
\title{Create a diffusion map for an SingleCellExperiment object}
\usage{
runDiffusionMap(object, ntop = 500, ncomponents = 2, feature_set = NULL,
  exprs_values = "logcounts", scale_features = TRUE, use_dimred = NULL,
  n_dimred = NULL, rand_seed = NULL, ...)
}
\arguments{
\item{object}{a \code{SingleCellExperiment} object}

\item{ntop}{numeric scalar indicating the number of most variable features to
use for the diffusion map. Default is \code{500}, but any \code{ntop}
argument is overrided if the \code{feature_set} argument is non-NULL.}

\item{ncomponents}{numeric scalar indicating the number of diffusion
components to obtain.}

\item{feature_set}{character, numeric or logical vector indicating a set of
features to use for the diffusion map. If character, entries must all be in
\code{featureNames(object)}. If numeric, values are taken to be indices for
features. If logical, vector is used to index features and should have length
equal to \code{nrow(object)}.}

\item{exprs_values}{character string indicating which values should be used
as the expression values for this plot. Valid arguments are \code{"tpm"}
(transcripts per million), \code{"norm_tpm"} (normalised TPM
values), \code{"fpkm"} (FPKM values), \code{"norm_fpkm"} (normalised FPKM
values), \code{"counts"} (counts for each feature), \code{"norm_counts"},
\code{"cpm"} (counts-per-million), \code{"norm_cpm"} (normalised
counts-per-million), \code{"logcounts"} (log-transformed count data; default),
\code{"norm_exprs"} (normalised
expression values) or \code{"stand_exprs"} (standardised expression values)
or any other named element of the \code{assayData} slot of the \code{SingleCellExperiment}
object that can be accessed with the \code{assay} function.}

\item{scale_features}{logical, should the expression values be standardised
so that each feature has unit variance? Default is \code{TRUE}.}

\item{use_dimred}{character(1), use named reduced dimension representation of cells
stored in \code{SingleCellExperiment} object instead of recomputing (e.g. "PCA").
 Default is \code{NULL}, no reduced dimension values are provided to \code{Rtsne}.}

\item{n_dimred}{integer(1), number of components of the reduced dimension slot
to use. Default is \code{NULL}, in which case (if \code{use_dimred} is not \code{NULL})
all components of the reduced dimension slot are used.}

\item{rand_seed}{(optional) numeric scalar that can be passed to
\code{set.seed} to make plots reproducible.}

\item{...}{Additional arguments to pass to \code{\link[destiny]{DiffusionMap}}.}
}
\description{
Produce a diffusion map plot using data stored in a \code{SingleCellExperiment} 
object.
}
\details{
The function \code{\link[destiny]{DiffusionMap}} is used internally
to compute the diffusion map.
}
\examples{
## Set up an example SingleCellExperiment
data("sc_example_counts")
data("sc_example_cell_info")
example_sce <- SingleCellExperiment(
assays = list(counts = sc_example_counts), colData = sc_example_cell_info)
example_sce <- normalize(example_sce)

example_sce <- runDiffusionMap(example_sce)
reducedDimNames(example_sce)
head(reducedDim(example_sce))
}
\seealso{
\code{\link[destiny]{destiny}},
\code{\link[scater]{plotDiffusionMap}}
}
