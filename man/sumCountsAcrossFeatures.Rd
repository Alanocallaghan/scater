% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/sumCountsAcrossFeatures.R
\docType{methods}
\name{sumCountsAcrossFeatures}
\alias{sumCountsAcrossFeatures}
\alias{sumCountsAcrossFeatures,ANY-method}
\alias{sumCountsAcrossFeatures,SummarizedExperiment-method}
\alias{aggregateAcrossFeatures}
\title{Sum counts across a feature set}
\usage{
sumCountsAcrossFeatures(x, ...)

\S4method{sumCountsAcrossFeatures}{ANY}(x, ids, BPPARAM = SerialParam())

\S4method{sumCountsAcrossFeatures}{SummarizedExperiment}(x, ...,
  assay.type = "counts", exprs_values = NULL)

aggregateAcrossFeatures(x, ids, ..., use.assay.types = "counts")
}
\arguments{
\item{x}{For \code{sumCountsAcrossFeatures}, a numeric matrix of counts containing features in rows and cells in columns.
Alternatively, a \linkS4class{SummarizedExperiment} object containing such a count matrix.

For \code{aggregateAcrossFeatures}, a SummarizedExperiment containing a count matrix.}

\item{...}{For the \code{sumCountsAcrossFeatures} generic, further arguments to be passed to specific methods.

For the SummarizedExperiment method, further arguments to be passed to the ANY method.

For \code{aggregateAcrossFeatures}, further arguments to be passed to \code{sumCountsAcrossFeatures}.}

\item{ids}{A factor specifying the set to which each feature in \code{x} belongs.}

\item{BPPARAM}{A \linkS4class{BiocParallelParam} object specifying whether summation should be parallelized.}

\item{assay.type}{A string or integer scalar specifying the assay of \code{x} containing the matrix of counts
(or any other expression quantity that can be meaningfully summed).}

\item{exprs_values}{Deprecated, same as \code{assay.type}.}

\item{use.assay.types}{A character or integer vector specifying the assay(s) of \code{x} containing count matrices.}
}
\value{
For \code{sumCountsAcrossFeatures}, a count matrix is returned with one row per level of \code{ids}.
In each cell, counts for all features in the same set are summed together.
Rows are ordered according to \code{levels(ids)}.

For \code{aggregateAcrossFeatures}, a SummarizedExperiment of the same class as \code{x} is returned,
containing summed matrices generated by \code{sumCountsAcrossFeatures} on all \code{use.assay.types}.
Row metadata is retained for the first instance of a feature from each set in \code{ids}.
}
\description{
Create a count matrix where counts for all features in a set are summed together.
}
\details{
This function provides a convenient method for aggregating counts across multiple rows for each cell.
For example, genes with multiple mapping locations in the reference will often manifest as multiple rows with distinct Ensembl/Entrez IDs.
These counts can be aggregated into a single feature by setting the shared identifier (usually the gene symbol) as \code{ids}.

It is theoretically possible to aggregate transcript-level counts to gene-level counts with this function.
However, it is often better to do so with dedicated functions (e.g., from the \pkg{tximport} or \pkg{tximeta} packages) that account for differences in length across isoforms.

The behaviour of this function is equivalent to that of \code{\link{rowsum}}.
However, this function can operate on any matrix representation in \code{object},
and can do so in a parallelized manner for large matrices without resorting to block processing.

Any \code{NA} values in \code{ids} are implicitly ignored and will not be considered or reported.
This may be useful, e.g., to remove undesirable feature sets by setting their entries in \code{ids} to \code{NA}.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
example_sce <- SingleCellExperiment(
    assays = list(counts = sc_example_counts), 
    colData = sc_example_cell_info)

ids <- sample(LETTERS, nrow(example_sce), replace=TRUE)
out <- sumCountsAcrossFeatures(example_sce, ids)
dimnames(out)
}
\author{
Aaron Lun
}
