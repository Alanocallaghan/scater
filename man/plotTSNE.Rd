% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plotTSNE}
\alias{plotTSNE}
\alias{plotTSNE,SingleCellExperiment-method}
\title{Plot t-SNE for an SingleCellExperiment object}
\usage{
plotTSNE(object, ..., return_SCE = FALSE, draw_plot = TRUE, rerun = FALSE,
  ncomponents = 2, run_args = list())
}
\arguments{
\item{object}{a \code{SingleCellExperiment} object}

\item{...}{Additional arguments to pass to \code{\link{plotReducedDim}}.}

\item{return_SCE}{logical, should the function return a \code{SingleCellExperiment}
object with principal component values for cells in the
\code{reducedDims} slot. Default is \code{FALSE}, in which case a
\code{ggplot} object is returned.}

\item{draw_plot}{logical, should the plot be drawn on the current graphics
device? Only used if \code{return_SCE} is \code{TRUE}, otherwise the plot
is always produced.}

\item{rerun}{logical, should PCA be recomputed even if \code{object} contains a
\code{"TSNE"} element in the \code{reducedDims} slot?}

\item{ncomponents}{numeric scalar indicating the number of t-SNE
components to plot, starting from the first t-SNE component. Default is
2. If \code{ncomponents} is 2, then a scatterplot of component 1 vs component
2 is produced. If \code{ncomponents} is greater than 2, a pairs plots for the
top components is produced. NB: computing more than two components for t-SNE
can become very time consuming.}

\item{run_args}{Arguments to pass to \code{\link{runTSNE}} when \code{rerun=TRUE}
or if there is no existing \code{"TSNE"} element in the \code{reducedDims} slot.}
}
\value{
If \code{return_SCE} is \code{TRUE}, then the function returns a
\code{SingleCellExperiment} object, otherwise it returns a \code{ggplot} object.
}
\description{
Produce a t-distributed stochastic neighbour embedding (t-SNE) plot of two
components for a \code{SingleCellExperiment} object.
}
\details{
The function \code{\link[Rtsne]{Rtsne}} is used internally to
compute the t-SNE. Note that the algorithm is not deterministic, so different
runs of the function will produce differing plots (see \code{\link{set.seed}}
to set a random seed for replicable results). The value of the
\code{perplexity} parameter can have a large effect on the resulting plot, so
it can often be worthwhile to try multiple values to find the most appealing
visualisation.
}
\examples{
## Set up an example SingleCellExperiment
data("sc_example_counts")
data("sc_example_cell_info")
example_sce <- SingleCellExperiment(
assays = list(counts = sc_example_counts), colData = sc_example_cell_info)
example_sce <- normalize(example_sce)
drop_genes <- apply(exprs(example_sce), 1, function(x) {var(x) == 0})
example_sce <- example_sce[!drop_genes, ]

## Examples plotting t-SNE
plotTSNE(example_sce, perplexity = 10)
plotTSNE(example_sce, colour_by = "Cell_Cycle", perplexity = 10)
plotTSNE(example_sce, colour_by = "Cell_Cycle", shape_by = "Treatment",
size_by = "Mutation_Status", perplexity = 10)
plotTSNE(example_sce, shape_by = "Treatment", size_by = "Mutation_Status",
perplexity = 5)
plotTSNE(example_sce, feature_set = 1:100, colour_by = "Treatment",
shape_by = "Mutation_Status", perplexity = 5)

plotTSNE(example_sce, shape_by = "Treatment", return_SCE = TRUE,
perplexity = 10)


}
\references{
L.J.P. van der Maaten. Barnes-Hut-SNE. In Proceedings of the International
Conference on Learning Representations, 2013.
}
\seealso{
\code{\link{runTSNE}}
}
